******************
bsg_1_to_n_tagged
******************

* Overview

  This module is intended to take one input and send it to one of several channels according to tag.

- Port
  
  +---------+-------------+--------------+--------------------------------------------+
  |  Type   |     NAME    |     WIDTH    |                 DESCRIPTION                |
  +---------+-------------+--------------+--------------------------------------------+ 
  |  CLOCK  |    clk_i    |       1      | clock port                                 |
  +---------+-------------+--------------+--------------------------------------------+
  |  RESET  |   reset_i   |       1      | reset port                                 |
  +---------+-------------+--------------+--------------------------------------------+
  |         |     v_i     |    width_p   | data input port                            |
  +         +-------------+--------------+--------------------------------------------+ 
  |  INPUT  |    tag_i    | tag_width_lp | data input port                            |
  +         +-------------+--------------+--------------------------------------------+
  |         |   ready_i   |  num_out_p   | data input port                            |
  +---------+-------------+--------------+--------------------------------------------+
  |         |   yumi_o    |       1      | data output port                           |
  +  OUTPUT +-------------+--------------+--------------------------------------------+
  |         |     v_o     |   num_out_p  | data output port                           |
  +---------+-------------+--------------+--------------------------------------------+

* Parameter
  
  +-----------------+-----------------------------------------------+-------------------------------+
  |       Name      |     DESCRIPTION                               |             DEFAULT           |
  +-----------------+-----------------------------------------------+-------------------------------+ 
  |    num_out_p    | input and output data width                   |               -1              |    
  +-----------------+-----------------------------------------------+-------------------------------+
  |   tag_width_lp  | input data width                              | `BSG_SAFE_CLOG2(num_out_p)    |        
  +-----------------+-----------------------------------------------+-------------------------------+

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_1_to_n_tagged.jpg

**********************
bsg_1_to_n_tagged_fifo
**********************

* Overview

  This module implements a FIFO that takes in a multiplexed stream on one end, and provides demultiplexed access on the other.

- Port
  
  +---------+-------------+----------------------+--------------------------------------------+
  |  Type   |     NAME    |         WIDTH        |                 DESCRIPTION                |
  +---------+-------------+----------------------+--------------------------------------------+ 
  |  CLOCK  |    clk_i    |           1          | clock port                                 |
  +---------+-------------+----------------------+--------------------------------------------+
  |  RESET  |   reset_i   |           1          | reset port                                 |
  +---------+-------------+----------------------+--------------------------------------------+
  |         |     v_i     |           1          | data input port                            |
  +         +-------------+----------------------+--------------------------------------------+ 
  |         |    tag_i    |     tag_width_lp     | data input port                            |
  +  INPUT  +-------------+----------------------+--------------------------------------------+
  |         |    data_i   |        width_p       | data input port                            |
  +         +-------------+----------------------+--------------------------------------------+
  |         |    yumi_i   |       num_out_p      | data input port                            |
  +---------+-------------+----------------------+--------------------------------------------+
  |         |   yumi_o    |           1          | data output port                           |
  +         +-------------+----------------------+--------------------------------------------+
  | OUTPUT  |     v_o     |       num_out_p      | data output port                           |
  +         +-------------+----------------------+--------------------------------------------+
  |         |   data_o    |   num_out_p*width_p  | data output port                           |
  +---------+-------------+----------------------+--------------------------------------------+

* Parameter
  
  +---------------------------+-----------------------------------------------+-------------------------------+
  |           Name            |     DESCRIPTION                               |             DEFAULT           |
  +---------------------------+-----------------------------------------------+-------------------------------+ 
  |         width_p           | input and output data width                   |             "inv"             |    
  +---------------------------+-----------------------------------------------+-------------------------------+
  |        num_out_p          | input data width                              |              -1               | 
  +---------------------------+-----------------------------------------------+-------------------------------+
  |          els_p            | input data width                              |             "inv"             | 
  +---------------------------+-----------------------------------------------+-------------------------------+
  |    unbuffered_mask_p      | input data width                              |               0               | 
  +---------------------------+-----------------------------------------------+-------------------------------+
  |   use_pseudo_large_fifo_p | input data width                              |               0               | 
  +---------------------------+-----------------------------------------------+-------------------------------+
  |       tag_width_lp        | input data width                              |  `BSG_SAFE_CLOG2(num_out_p)   | 
  +---------------------------+-----------------------------------------------+-------------------------------+

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_1_to_n_tagged_fifo.jpg

******************************
bsg_1_to_n_tagged_fifo_shared
******************************

* Overview

  This module implements a FIFO that takes in a multiplexed stream on one end, and provides demultiplexed access on the other.

- Port
  
  +---------+-------------+----------------------+--------------------------------------------+
  |  Type   |     NAME    |         WIDTH        |                 DESCRIPTION                |
  +---------+-------------+----------------------+--------------------------------------------+ 
  |  CLOCK  |    clk_i    |           1          | clock port                                 |
  +---------+-------------+----------------------+--------------------------------------------+
  |  RESET  |   reset_i   |           1          | reset port                                 |
  +---------+-------------+----------------------+--------------------------------------------+
  |         |     v_i     |           1          | data input port                            |
  +         +-------------+----------------------+--------------------------------------------+ 
  |         |    tag_i    |     tag_width_lp     | data input port                            |
  +  INPUT  +-------------+----------------------+--------------------------------------------+
  |         |    data_i   |        width_p       | data input port                            |
  +         +-------------+----------------------+--------------------------------------------+
  |         |    yumi_i   |       num_out_p      | data input port                            |
  +---------+-------------+----------------------+--------------------------------------------+
  |         |   yumi_o    |           1          | data output port                           |
  +         +-------------+----------------------+--------------------------------------------+
  | OUTPUT  |     v_o     |       num_out_p      | data output port                           |
  +         +-------------+----------------------+--------------------------------------------+
  |         |   data_o    |   num_out_p*width_p  | data output port                           |
  +---------+-------------+----------------------+--------------------------------------------+

* Parameter
  
  +---------------------------+-----------------------------------------------+-------------------------------+
  |           Name            |     DESCRIPTION                               |             DEFAULT           |
  +---------------------------+-----------------------------------------------+-------------------------------+ 
  |         width_p           | input and output data width                   |             "inv"             |    
  +---------------------------+-----------------------------------------------+-------------------------------+
  |        num_out_p          | input data width                              |              -1               | 
  +---------------------------+-----------------------------------------------+-------------------------------+
  |          els_p            | input data width                              |             "inv"             | 
  +---------------------------+-----------------------------------------------+-------------------------------+
  |    unbuffered_mask_p      | input data width                              |               0               | 
  +---------------------------+-----------------------------------------------+-------------------------------+
  |   use_pseudo_large_fifo_p | input data width                              |               0               | 
  +---------------------------+-----------------------------------------------+-------------------------------+
  |       tag_width_lp        | input data width                              |  `BSG_SAFE_CLOG2(num_out_p)   | 
  +---------------------------+-----------------------------------------------+-------------------------------+

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_1_to_n_tagged_fifo_shared.jpg

***********************
bsg_8b10b_decode_comb
***********************

* Overview

  This module is byte oriented DC balanced 8B/10B block transfer decoder.

- Port
  
  +---------+-----------------+----------------------+--------------------------------------------+
  |  Type   |       NAME      |         WIDTH        |                 DESCRIPTION                |
  +---------+-----------------+----------------------+--------------------------------------------+ 
  |         |      data_i     |          10          | data input port                            |
  +  INPUT  +-----------------+----------------------+--------------------------------------------+ 
  |         |       rd_i      |           1          | data input port                            |
  +---------+-----------------+----------------------+--------------------------------------------+
  |         |      data_o     |           8          | data output port                           |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |       k_o       |           1          | data output port                           |
  +         +-----------------+----------------------+--------------------------------------------+
  | OUTPUT  |       rd_o      |           1          | data output port                           |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |    data_err_o   |           1          | data output port                           |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |     rd_err_o    |           1          | data output port                           |
  +---------+-----------------+----------------------+--------------------------------------------+

* Parameter

  None

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_8b10b_decode_comb.jpg

***********************
bsg_8b10b_encode_comb
***********************

* Overview

  This module is byte oriented DC balanced 8B/10B block transfer encoder.

- Port
  
  +---------+-----------------+----------------------+--------------------------------------------+
  |  Type   |       NAME      |         WIDTH        |                 DESCRIPTION                |
  +---------+-----------------+----------------------+--------------------------------------------+ 
  |         |      data_i     |           8          | data input port                            |
  +         +-----------------+----------------------+--------------------------------------------+ 
  |  INPUT  |       k_i       |           1          | data input port                            |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |       rd_i      |           1          | data input port                            |
  +---------+-----------------+----------------------+--------------------------------------------+
  |         |      data_o     |          10          | data output port                           |
  +         +-----------------+----------------------+--------------------------------------------+
  | OUTPUT  |      rd_o       |           1          | data output port                           |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |     kerr_o      |           1          | data output port                           |
  +---------+-----------------+----------------------+--------------------------------------------+

* Parameter

  None

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_8b10b_encode_comb.jpg

***********************
bsg_8b10b_shift_decoder
***********************

* Overview

  This module is byte oriented DC balanced 8B/10B block transfer decoder with shift register.

- Port
  
  +---------+-----------------+----------------------+--------------------------------------------+
  |  Type   |       NAME      |         WIDTH        |                 DESCRIPTION                |
  +---------+-----------------+----------------------+--------------------------------------------+ 
  |  CLOCK  |      clock      |           1          | clock input port                           |
  +---------+-----------------+----------------------+--------------------------------------------+ 
  |  INPUT  |      data_i     |           1          | data input port                            |
  +---------+-----------------+----------------------+--------------------------------------------+
  |         |      data_o     |           8          | data output port                           |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |       k_o       |           1          | data output port                           |
  + OUTPUT  +-----------------+----------------------+--------------------------------------------+
  |         |       v_o       |           1          | data output port                           |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |  frame_align_o  |           1          | data output port                           |
  +---------+-----------------+----------------------+--------------------------------------------+

* Parameter

  None

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_8b10b_shift_decoder.jpg

*******************
bsg_channel_narrow
*******************

* Overview

  This module takes output of a previous module and sends this data in smaller number of bits by receiving deque from next module.

- Port
  
  +---------+-----------------+----------------------+--------------------------------------------+
  |  Type   |       NAME      |         WIDTH        |                 DESCRIPTION                |
  +---------+-----------------+----------------------+--------------------------------------------+ 
  |  CLOCK  |      clock      |           1          | clock input port                           |
  +---------+-----------------+----------------------+--------------------------------------------+ 
  |  RESET  |     reset_i     |           1          | reset input port                           |
  +---------+-----------------+----------------------+--------------------------------------------+
  |         |      data_i     |      width_in_p      | data input port                            |
  +  INPUT  +-----------------+----------------------+--------------------------------------------+
  |         |     deque_i     |           1          | data input port                            |
  +---------+-----------------+----------------------+--------------------------------------------+
  |         |     deque_o     |           1          | data output port                           |
  + OUTPUT  +-----------------+----------------------+--------------------------------------------+
  |         |      data_o     |      1width_out_p    | data output port                           |
  +---------+-----------------+----------------------+--------------------------------------------+


* Parameter

  +---------------------------+-----------------------------------------------+-------------------------------+
  |           Name            |     DESCRIPTION                               |             DEFAULT           |
  +---------------------------+-----------------------------------------------+-------------------------------+ 
  |        width_in_p         | input data width                              |               -1              |    
  +---------------------------+-----------------------------------------------+-------------------------------+
  |       width_out_p         | output data width                             |               -1              | 
  +---------------------------+-----------------------------------------------+-------------------------------+
  |       lsb_to_msb_p        | select signal                                 |                1              | 
  +---------------------------+-----------------------------------------------+-------------------------------+

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_channel_narrow.jpg

*******************
bsg_channel_narrow
*******************

* Overview

  This module takes output of a previous module and sends this data in smaller number of bits by receiving deque from next module.

- Port
  
  +---------+-----------------+----------------------+--------------------------------------------+
  |  Type   |       NAME      |         WIDTH        |                 DESCRIPTION                |
  +---------+-----------------+----------------------+--------------------------------------------+ 
  |  CLOCK  |      clock      |           1          | clock input port                           |
  +---------+-----------------+----------------------+--------------------------------------------+ 
  |  RESET  |     reset_i     |           1          | reset input port                           |
  +---------+-----------------+----------------------+--------------------------------------------+
  |         |      data_i     |      width_in_p      | data input port                            |
  +  INPUT  +-----------------+----------------------+--------------------------------------------+
  |         |     deque_i     |           1          | data input port                            |
  +---------+-----------------+----------------------+--------------------------------------------+
  |         |     deque_o     |           1          | data output port                           |
  + OUTPUT  +-----------------+----------------------+--------------------------------------------+
  |         |      data_o     |      1width_out_p    | data output port                           |
  +---------+-----------------+----------------------+--------------------------------------------+


* Parameter

  +---------------------------+-----------------------------------------------+-------------------------------+
  |           Name            |     DESCRIPTION                               |             DEFAULT           |
  +---------------------------+-----------------------------------------------+-------------------------------+ 
  |        width_in_p         | input data width                              |               -1              |    
  +---------------------------+-----------------------------------------------+-------------------------------+
  |       width_out_p         | output data width                             |               -1              | 
  +---------------------------+-----------------------------------------------+-------------------------------+
  |       lsb_to_msb_p        | select signal                                 |                1              | 
  +---------------------------+-----------------------------------------------+-------------------------------+

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_channel_narrow.jpg

*******************
bsg_channel_tunnel
*******************

* Overview

  This module allows you to multiplex multiple streams over a shared interconnect without having deadlock occur because of stream interleaving.

- Port
  
  +---------+-----------------+----------------------+--------------------------------------------+
  |  Type   |       NAME      |         WIDTH        |                 DESCRIPTION                |
  +---------+-----------------+----------------------+--------------------------------------------+ 
  |  CLOCK  |      clock      |           1          | clock input port                           |
  +---------+-----------------+----------------------+--------------------------------------------+ 
  |  RESET  |     reset_i     |           1          | reset input port                           |
  +---------+-----------------+----------------------+--------------------------------------------+
  |         |   multi_data_i  |    tagged_width_lp   | data input port                            |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |    multi_v_i    |           1          | data input port                            |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |   multi_yumi_i  |           1          | data input port                            |
  +  INPUT  +-----------------+----------------------+--------------------------------------------+
  |         |     data_i      |   num_in_p*width_p   | data input port                            |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |       v_i       |       num_in_p       | data input port                            |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |     yumi_i      |       num_in_p       | data input port                            |
  +---------+-----------------+----------------------+--------------------------------------------+
  |         |  multi_yumi_o   |           1          | data output port                           |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |  multi_data_o   |    tagged_width_lp   | data output port                           |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |    multi_v_o    |           1          | data output port                           |
  + OUTPUT  +-----------------+----------------------+--------------------------------------------+
  |         |     yumi_o      |       num_in_p       | data output port                           |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |     data_o      |    num_in_p*width_p  | data output port                           |
  +         +-----------------+----------------------+--------------------------------------------+
  |         |       v_o       |       num_in_p       | data output port                           |
  +---------+-----------------+----------------------+--------------------------------------------+


* Parameter

  +---------------------------+-----------------------------------------------+--------------------------------+
  |           Name            |     DESCRIPTION                               |             DEFAULT            |
  +---------------------------+-----------------------------------------------+--------------------------------+ 
  |         width_p           | input and output data width                   |               1                |    
  +---------------------------+-----------------------------------------------+--------------------------------+
  |        num_in_p           | input and output data width                   |             "inv"              | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |     remote_credits_p      | input data width                              |             "inv"              | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |  use_pseudo_large_fifo_p  | input data width                              |               0                | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |   lg_remote_credits_lp    | internal signal width                         |  $clog2(remote_credits_p+1)    | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |  lg_credit_decimation_p   | input data width                              |`BSG_MIN(lg_remote_credits_lp,4)| 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |      tag_width_lp         | input data width                              |        $clog2(num_in_p+1)      | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |     tagged_width_lp       | input data width                              |      tag_width_lp + width_p    | 
  +---------------------------+-----------------------------------------------+--------------------------------+
- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_channel_tunnel.jpg   

**********************
bsg_channel_tunnel_in
**********************

* Overview

  This module takes N channels and tunnels them, with credit flow control.

- Port
  
  +---------+----------------------------+-------------------------------+--------------------------------------------+
  |  Type   |            NAME            |              WIDTH            |                 DESCRIPTION                |
  +---------+----------------------------+-------------------------------+--------------------------------------------+ 
  |  CLOCK  |            clock           |                1              | clock input port                           |
  +---------+----------------------------+-------------------------------+--------------------------------------------+ 
  |  RESET  |           reset_i          |                1              | reset input port                           |
  +---------+----------------------------+-------------------------------+--------------------------------------------+
  |         |            data_i          |          tagged_width_lp      | data input port                            |
  +         +----------------------------+-------------------------------+--------------------------------------------+
  |  INPUT  |             v_i            |                1              | data input port                            |
  +         +----------------------------+-------------------------------+--------------------------------------------+
  |         |            yumi_i          |             num_in_p          | data input port                            |
  +---------+----------------------------+-------------------------------+--------------------------------------------+
  |         |             yumi_o         |                1              | data output port                           |
  +         +----------------------------+-------------------------------+--------------------------------------------+
  |         |            data_o          |          num_in_p*width_p     | data output port                           |
  +         +----------------------------+-------------------------------+--------------------------------------------+
  | OUTPUT  |             v_o            |              num_in_p         | data output port                           |
  +         +----------------------------+-------------------------------+--------------------------------------------+
  |         | credit_local_return_data_o | num_in_p*lg_remote_credits_lp | data output port                           |
  +         +----------------------------+-------------------------------+--------------------------------------------+
  |         | credit_local_return_v_o    |          num_in_p*width_p     | data output port                           |
  +---------+----------------------------+-------------------------------+--------------------------------------------+


* Parameter

  +---------------------------+-----------------------------------------------+--------------------------------+
  |           Name            |     DESCRIPTION                               |             DEFAULT            |
  +---------------------------+-----------------------------------------------+--------------------------------+ 
  |         width_p           | input and output data width                   |               -1               |    
  +---------------------------+-----------------------------------------------+--------------------------------+
  |        num_in_p           | input and output data width                   |              "inv"             | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |     remote_credits_p      | input data width                              |              "inv"             | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |  use_pseudo_large_fifo_p  | input data width                              |                0               | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |   lg_remote_credits_lp    | internal signal width                         |  $clog2(remote_credits_p+1)    | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |  lg_credit_decimation_p   | input data width                              |                4               | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |      tag_width_lp         | input data width                              |        $clog2(num_in_p+1)      | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |     tagged_width_lp       | input data width                              |       tag_width_lp+width_p     | 
  +---------------------------+-----------------------------------------------+--------------------------------+
- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_channel_tunnel_in.jpg 

**********************
bsg_channel_tunnel_out
**********************

* Overview

  This module takes N channels and tunnels them, with credit flow control.

- Port
  
  +---------+----------------------------+-------------------------------+--------------------------------------------+
  |  Type   |            NAME            |              WIDTH            |                 DESCRIPTION                |
  +---------+----------------------------+-------------------------------+--------------------------------------------+ 
  |  CLOCK  |            clock           |                1              | clock input port                           |
  +---------+----------------------------+-------------------------------+--------------------------------------------+ 
  |  RESET  |           reset_i          |                1              | reset input port                           |
  +---------+----------------------------+-------------------------------+--------------------------------------------+
  |         |            data_i          |         num_in_p*width_p      | data input port                            |
  +         +----------------------------+-------------------------------+--------------------------------------------+
  |  INPUT  |             v_i            |             num_in_p          | data input port                            |
  +         +----------------------------+-------------------------------+--------------------------------------------+
  |         |            yumi_i          |                1              | data input port                            |
  +         +----------------------------+-------------------------------+--------------------------------------------+
  |         | credit_local_return_data_i |                1              | data output port                           |
  +         +----------------------------+-------------------------------+--------------------------------------------+
  |         |  credit_local_return_v_i   |                1              | data output port                           |
  +         +----------------------------+-------------------------------+--------------------------------------------+
  |         |credit_remote_return_data_i |                1              | data output port                           |
  +---------+----------------------------+-------------------------------+--------------------------------------------+
  |         |           yumi_o           |            num_in_p           | data output port                           |
  +         +----------------------------+-------------------------------+--------------------------------------------+
  | OUTPUT  |           data_o           |        tagged_width_lp        | data output port                           |
  +         +----------------------------+-------------------------------+--------------------------------------------+
  |         |            v_o             |                1              | data output port                           |
  +         +----------------------------+-------------------------------+--------------------------------------------+
  |         | credit_remote_return_yumi_o|                1              | data output port                           |
  +---------+----------------------------+-------------------------------+--------------------------------------------+


* Parameter

  +---------------------------+-----------------------------------------------+--------------------------------+
  |           Name            |     DESCRIPTION                               |             DEFAULT            |
  +---------------------------+-----------------------------------------------+--------------------------------+ 
  |         width_p           | input and output data width                   |               -1               |    
  +---------------------------+-----------------------------------------------+--------------------------------+
  |        num_in_p           | input and output data width                   |              "inv"             | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |     remote_credits_p      | input data width                              |              "inv"             | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |   lg_remote_credits_lp    | internal signal width                         |  $clog2(remote_credits_p+1)    | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |  lg_credit_decimation_p   | input data width                              |                4               | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |      tag_width_lp         | input data width                              |        $clog2(num_in_p+1)      | 
  +---------------------------+-----------------------------------------------+--------------------------------+
  |     tagged_width_lp       | input data width                              |       tag_width_lp+width_p     | 
  +---------------------------+-----------------------------------------------+--------------------------------+
- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_channel_tunnel_out.jpg 

***************************
bsg_channel_tunnel_wormhole
***************************

* Overview

  This module is a special version bsg_channel_tunnel that accepts wormhole packet.

- Port
  
  +---------+----------------------------+------------------------------------------+--------------------------------------------+
  |  Type   |            NAME            |                   WIDTH                  |                 DESCRIPTION                |
  +---------+----------------------------+------------------------------------------+--------------------------------------------+ 
  |  CLOCK  |            clock           |                     1                    | clock input port                           |
  +---------+----------------------------+------------------------------------------+--------------------------------------------+ 
  |  RESET  |           reset_i          |                     1                    | reset input port                           |
  +---------+----------------------------+------------------------------------------+--------------------------------------------+
  |         |        multi_data_i        |                   width_p                | data input port                            |
  +         +----------------------------+------------------------------------------+--------------------------------------------+
  |         |         multi_v_i          |                     1                    | data input port                            |
  +  INPUT  +----------------------------+------------------------------------------+--------------------------------------------+
  |         |         multi_yumi_i       |                     1                    | data input port                            |
  +         +----------------------------+------------------------------------------+--------------------------------------------+
  |         |            link_i          |num_in_p*bsg_ready_and_link_sif_width_lp  | data input port                            |
  +---------+----------------------------+------------------------------------------+--------------------------------------------+
  |         |        multi_ready_o       |                     1                    | data output port                           |
  +         +----------------------------+------------------------------------------+--------------------------------------------+
  |         |         multi_data_o       |                   width_p                | data output port                           |
  + OUTPUT  +----------------------------+------------------------------------------+--------------------------------------------+
  |         |         multi_v_o          |                      1                   | data output port                           |
  +         +----------------------------+------------------------------------------+--------------------------------------------+
  |         |           link_o           |num_in_p*bsg_ready_and_link_sif_width_lp  | data output port                           |
  +---------+----------------------------+------------------------------------------+--------------------------------------------+


* Parameter

  +---------------------------------+----------------------------------------------------------------------+-----------------------------------------+
  |           Name                  |                     DESCRIPTION                                      |                    DEFAULT              |
  +---------------------------------+----------------------------------------------------------------------+-----------------------------------------+ 
  |         width_p                 | input and output data width                                          |                    "inv"                |    
  +---------------------------------+----------------------------------------------------------------------+-----------------------------------------+
  |      x_cord_width_p             | data width                                                           |                    "inv"                | 
  +---------------------------------+----------------------------------------------------------------------+-----------------------------------------+
  |      y_cord_width_p             | data width                                                           |                    "inv"                | 
  +---------------------------------+----------------------------------------------------------------------+-----------------------------------------+
  |        len_width_p              | length width                                                         |                    "inv"                | 
  +---------------------------------+----------------------------------------------------------------------+-----------------------------------------+
  |      reserved_width_p           | data width                                                           |                    "inv"                | 
  +---------------------------------+----------------------------------------------------------------------+-----------------------------------------+
  |         num_in_p                | total number of inputs multiplexed                                   |                    "inv"                | 
  +---------------------------------+----------------------------------------------------------------------+-----------------------------------------+
  |      remote_credits_p           |max number of wormhole packets buffer can store                       |                    "inv"                | 
  +---------------------------------+----------------------------------------------------------------------+-----------------------------------------+
  |     max_payload_flits_p         |max possible "wormhole packet payload length" setting                 |                    "inv"                | 
  +---------------------------------+----------------------------------------------------------------------+-----------------------------------------+
  |   lg_credit_decimation_p        |how often does channel tunnel return credits to sender                | `BSG_MIN($clog2(remote_credits_p+1),4)  | 
  +---------------------------------+----------------------------------------------------------------------+-----------------------------------------+
  |  use_pseudo_large_fifo_p        |use pseudo large fifo when read / write utilization is less than 50%  |                      1                  | 
  +---------------------------------+----------------------------------------------------------------------+-----------------------------------------+
  | bsg_ready_and_link_sif_width_lp |local parameters                                                      | `bsg_ready_and_link_sif_width(width_p)  | 
  +---------------------------------+----------------------------------------------------------------------+-----------------------------------------+
- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_channel_tunnel_wormhole.jpg 

********************
bsg_compare_and_swap
********************

* Overview

  This module compare two values and swap them if they are not in order.

- Port
  
  +---------+----------------------------+------------------------------------------+--------------------------------------------+
  |  Type   |            NAME            |                   WIDTH                  |                 DESCRIPTION                |
  +---------+----------------------------+------------------------------------------+--------------------------------------------+ 
  |         |           data_i           |                 2*width_p                | data input port                            |
  +  INPUT  +----------------------------+------------------------------------------+--------------------------------------------+
  |         |      swap_on_equal_i       |                     1                    | data input port                            |
  +---------+----------------------------+------------------------------------------+--------------------------------------------+
  |         |           data_o           |                 2*width_p                | data output port                           |
  +  OUTPUT +----------------------------+------------------------------------------+--------------------------------------------+
  |         |         swapped_o          |                     1                    | data output port                           |
  +---------+----------------------------+------------------------------------------+--------------------------------------------+


* Parameter
  
  +------------------------+-----------------------------------------------+-------------------------------+
  |          Name          |     DESCRIPTION                               |             DEFAULT           |
  +------------------------+-----------------------------------------------+-------------------------------+ 
  |         width_p        | input and output data width                   |             "inv"             |    
  +------------------------+-----------------------------------------------+-------------------------------+
  |           t_p          | data range                                    | `BSG_SAFE_CLOG2(num_out_p)    |        
  +------------------------+-----------------------------------------------+-------------------------------+
  |           b_p          | data range                                    | `BSG_SAFE_CLOG2(num_out_p)    |        
  +------------------------+-----------------------------------------------+-------------------------------+
  |  cond_swap_on_equal_p  | select signal                                 | `BSG_SAFE_CLOG2(num_out_p)    |        
  +------------------------+-----------------------------------------------+-------------------------------+

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_compare_and_swap.jpg

*******************
bsg_credit_to_token
*******************

* Overview

  This module is a counter for credits, that every decimation_p credits it would assert token_o signal once.

- Port
  
  +---------+----------------------------+------------------------------------------+--------------------------------------------+
  |  Type   |            NAME            |                   WIDTH                  |                 DESCRIPTION                |
  +---------+----------------------------+------------------------------------------+--------------------------------------------+ 
  |  CLOCK  |           clk_i            |                     1                    | clock input port                           |
  +---------+----------------------------+------------------------------------------+--------------------------------------------+
  |  RESET  |          reset_i           |                     1                    | reset input port                           |
  +---------+----------------------------+------------------------------------------+--------------------------------------------+
  |         |          credit_i          |                     1                    | data input port                            |
  +  INPUT  +----------------------------+------------------------------------------+--------------------------------------------+
  |         |          ready_i           |                     1                    | data input port                            |
  +---------+----------------------------+------------------------------------------+--------------------------------------------+
  |  OUTPUT |          token_o           |                     1                    | data output port                           |
  +---------+----------------------------+------------------------------------------+--------------------------------------------+

* Parameter
  
  +------------------------+-----------------------------------------------+-------------------------------+
  |          Name          |     DESCRIPTION                               |             DEFAULT           |
  +------------------------+-----------------------------------------------+-------------------------------+ 
  |      decimation_p      | signal width                                  |               -1              |    
  +------------------------+-----------------------------------------------+-------------------------------+
  |       max_val_p        | signal width                                  |               -1              |        
  +------------------------+-----------------------------------------------+-------------------------------+

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_credit_to_token.jpg

