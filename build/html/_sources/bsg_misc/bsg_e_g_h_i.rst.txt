****************
bsg_edge_detect
****************

* Overview

  This unit produces the fall edge.

- Port
  
  +---------+---------+-------------+---------------------------------------------+
  |  Type   |   NAME  |    WIDTH    |    DESCRIPTION                              |
  +---------+---------+-------------+---------------------------------------------+
  |  CLOCK  |  clk_i  |      1      | clock input port                            |
  +---------+---------+-------------+---------------------------------------------+
  |  RESET  | reset_i |      1      | reset input port                            |
  +---------+---------+-------------+---------------------------------------------+
  |  INPUT  |  sig_i  |      1      | data input port                             |
  +---------+---------+-------------+---------------------------------------------+
  | OUTPUT  | detect_o|      1      | data output port                            |
  +---------+---------+-------------+---------------------------------------------+

* Parameter
  
  +--------------------------+--------------------------------------+---------------------------------------+
  |            Name          |     DESCRIPTION                      |                DEFAULT                |
  +--------------------------+--------------------------------------+---------------------------------------+ 
  |   falling_not_rising_p   | input and output data width          |                   0                   |    
  +--------------------------+--------------------------------------+---------------------------------------+

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_edge_detect.jpg
 
*******************
bsg_encode_one_hot
*******************

* Overview

  This is a one hot encoder.

- Port
  
  +---------+---------+---------------------------+---------------------------------------------+
  |  Type   |   NAME  |            WIDTH          |    DESCRIPTION                              |
  +---------+---------+---------------------------+---------------------------------------------+
  |  INPUT  |    i    |           width_p         | data input port                             |
  +---------+---------+---------------------------+---------------------------------------------+
  |         |  addr_o | `BSG_SAFE_CLOG2(width_p)  | data output port                            |
  +  OUTPUT +---------+---------------------------+---------------------------------------------+
  |         |   v_o   |             1             | data output port                            |
  +---------+---------+---------------------------+---------------------------------------------+

* Parameter
  
  +--------------------------+--------------------------------------+---------------------------------------+
  |           Name           |          DESCRIPTION                 |                DEFAULT                |
  +--------------------------+--------------------------------------+---------------------------------------+ 
  |          width_p         |    input and output data width       |                   8                   |    
  +--------------------------+--------------------------------------+---------------------------------------+
  |         o_to_hi_p        |          select signal               |                   1                   |
  +--------------------------+--------------------------------------+---------------------------------------+
  |          debug_p         |          debug signal                |                   0                   |
  +--------------------------+--------------------------------------+---------------------------------------+

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_encode_one_hot.jpg
   
*******************
bsg_expand_bitmask
*******************

* Overview

  This module expands each bit in the input vector by the factor of expand_p.

- Port
  
  +---------+---------+---------------------------+---------------------------------------------+
  |  Type   |   NAME  |            WIDTH          |    DESCRIPTION                              |
  +---------+---------+---------------------------+---------------------------------------------+
  |  INPUT  |    i    |        in_width_p         | data input port                             |
  +---------+---------+---------------------------+---------------------------------------------+
  |  OUTPUT |    o    |    in_width_p*expand_p    | data output port                            |
  +---------+---------+---------------------------+---------------------------------------------+

* Parameter
  
  +--------------------------+--------------------------------------+---------------------------------------+
  |          Name            |          DESCRIPTION                 |                DEFAULT                |
  +--------------------------+--------------------------------------+---------------------------------------+ 
  |       in_width_p         |    input and output data width       |                 "inv"                 |    
  +--------------------------+--------------------------------------+---------------------------------------+
  |        expand_p          |          select signal               |                 "inv"                 |
  +--------------------------+--------------------------------------+---------------------------------------+

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_expand_bitmask.jpg

*******************
bsg_gray_to_binary
*******************

* Overview

  This module converts gray code into binary code.

- Port
  
  +---------+---------+---------------------------+---------------------------------------------+
  |  Type   |   NAME  |            WIDTH          |    DESCRIPTION                              |
  +---------+---------+---------------------------+---------------------------------------------+
  |  INPUT  |  gray_i |           width_p         | data input port                             |
  +---------+---------+---------------------------+---------------------------------------------+
  |  OUTPUT | binary_o|           width_p         | data output port                            |
  +---------+---------+---------------------------+---------------------------------------------+

* Parameter
  
  +--------------------------+--------------------------------------+---------------------------------------+
  |          Name            |          DESCRIPTION                 |                DEFAULT                |
  +--------------------------+--------------------------------------+---------------------------------------+ 
  |        width_p           |    input and output data width       |                  -1                   |    
  +--------------------------+--------------------------------------+---------------------------------------+

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_gray_to_binary.jpg

***************
bsg_hash_bank
***************

* Overview

  This module takes a binary address, and a constant number of banks, and then hashes the address across the banks efficiently; outputing the bank #, and the index at that bank.

- Port
  
  +---------+---------+---------------------------+---------------------------------------------+
  |  Type   |   NAME  |            WIDTH          |    DESCRIPTION                              |
  +---------+---------+---------------------------+---------------------------------------------+
  |  INPUT  |    i    |           width_p         | data input port                             |
  +---------+---------+---------------------------+---------------------------------------------+
  |         |  bank_o |         lg_banks_lp       | data output port                            |
  + OUTPUT  +---------+---------------------------+---------------------------------------------+
  |         | index_o |        index_width_lp     | data output port                            |
  +---------+---------+---------------------------+---------------------------------------------+

* Parameter
  
  +--------------------------+--------------------------------------+---------------------------------------+
  |          Name            |          DESCRIPTION                 |                DEFAULT                |
  +--------------------------+--------------------------------------+---------------------------------------+
  |        banks_p           |    input and output data width       |                 "inv"                 |
  +--------------------------+--------------------------------------+---------------------------------------+  
  |        width_p           |    input and output data width       |                 "inv"                 |    
  +--------------------------+--------------------------------------+---------------------------------------+
  |     index_width_lp       |    output data width                 | $clog2((2**width_p+banks_p-1)/banks_p)|               
  +--------------------------+--------------------------------------+---------------------------------------+
  |      lg_banks_lp         |    output data width                 |       `BSG_SAFE_CLOG2(banks_p)        |
  +--------------------------+--------------------------------------+---------------------------------------+
  |        debug_lp          |    debug signal                      |                    0                  | 
  +--------------------------+--------------------------------------+---------------------------------------+
  
- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_hash_bank.jpg

**********************
bsg_hash_bank_reverse
**********************

* Overview

  This module is the inverse,taking a bank number and an index, and producing the original address.

- Port
  
  +---------+---------+---------------------------+---------------------------------------------+
  |  Type   |   NAME  |            WIDTH          |    DESCRIPTION                              |
  +---------+---------+---------------------------+---------------------------------------------+
  |         | index_i |       index_width_lp      | data input port                             |
  + INPUT   +---------+---------------------------+---------------------------------------------+
  |         | bank_i  |        lg_banks_lp        | data input port                             |
  +---------+---------+---------------------------+---------------------------------------------+
  |  OUTPUT |    o    |           width_p         | data output port                            |
  +---------+---------+---------------------------+---------------------------------------------+

* Parameter
  
  +--------------------------+--------------------------------------+---------------------------------------+
  |          Name            |          DESCRIPTION                 |                DEFAULT                |
  +--------------------------+--------------------------------------+---------------------------------------+
  |        banks_p           |    input and output data width       |                 "inv"                 |
  +--------------------------+--------------------------------------+---------------------------------------+  
  |        width_p           |    input and output data width       |                 "inv"                 |    
  +--------------------------+--------------------------------------+---------------------------------------+
  |     index_width_lp       |    input data width                  | $clog2((2**width_p+banks_p-1)/banks_p)|               
  +--------------------------+--------------------------------------+---------------------------------------+
  |      lg_banks_lp         |    input data width                  |       `BSG_SAFE_CLOG2(banks_p)        |
  +--------------------------+--------------------------------------+---------------------------------------+
  |        debug_lp          |    debug signal                      |                    0                  | 
  +--------------------------+--------------------------------------+---------------------------------------+
  
- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_hash_bank_reverse.jpg

*******************
bsg_idiv_iterative
*******************

* Overview

  This module is an N-bit integer iterative divider, capable of signed & unsigned division.

- Port
  
  +---------+---------------+-------------+---------------------------------------------+
  |  Type   |      NAME     |    WIDTH    |    DESCRIPTION                              |
  +---------+---------------+-------------+---------------------------------------------+
  |  CLOCK  |      clk_i    |      1      | clock input port                            |
  +---------+---------------+-------------+---------------------------------------------+
  |  RESET  |     reset_i   |      1      | reset input port                            |
  +---------+---------------+-------------+---------------------------------------------+
  |         |       v_i     |      1      | data input port                             |
  +         +---------------+-------------+---------------------------------------------+
  |	        |   dividend_i  |   width_p   | data input port                             |
  +	        +---------------+-------------+---------------------------------------------+
  |	 INPUT  |    divisor_i  |   width_p   | data input port                             |
  +         +---------------+-------------+---------------------------------------------+
  |         |  signed_div_i |      1      | data input port                             |
  +         +---------------+-------------+---------------------------------------------+
  |         |      yumi_i   |      1      | data input port                             |
  +---------+---------------+-------------+---------------------------------------------+  
  |         |     ready_o   |      1      | data output port                            |
  +         +---------------+-------------+---------------------------------------------+
  |         |       v_o     |      1      | data output port                            |
  +  OUTPUT +---------------+-------------+---------------------------------------------+
  |         |   quotient_o  |   width_p   | data output port                            |
  +         +---------------+-------------+---------------------------------------------+
  |         |  remainder_o  |   width_p   | data output port                            |
  +---------+---------------+-------------+---------------------------------------------+  

* Parameter
  
  +--------------------------+--------------------------------------+---------------------------------------+
  |          Name            |          DESCRIPTION                 |                DEFAULT                |
  +--------------------------+--------------------------------------+---------------------------------------+ 
  |        width_p           |    input and output data width       |                  32                   |    
  +--------------------------+--------------------------------------+---------------------------------------+
  
- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_idiv_iterative.jpg

******************************
bsg_idiv_iterative_controller
******************************

* Overview

  The controller of bsg_idiv_iterative module.

- Port
  
  +---------+-----------------------+-------------+---------------------------------------------+
  |  Type   |           NAME        |    WIDTH    |    DESCRIPTION                              |
  +---------+-----------------------+-------------+---------------------------------------------+
  |  CLOCK  |          clk_i        |      1      | clock input port                            |
  +---------+-----------------------+-------------+---------------------------------------------+
  |  RESET  |         reset_i       |      1      | reset input port                            |
  +---------+-----------------------+-------------+---------------------------------------------+
  |         |           v_i         |      1      | data input port                             |
  +         +-----------------------+-------------+---------------------------------------------+
  |	        |     zero_divisor_i    |      1      | data input port                             |
  +	        +-----------------------+-------------+---------------------------------------------+
  |	        |     signed_div_r_i    |      1      | data input port                             |
  +         +-----------------------+-------------+---------------------------------------------+
  |  INPUT  | adder_result_is_neg_i |      1      | data input port                             |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |     opA_is_neg_i      |      1      | data input port                             |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |     opC_is_neg_i      |      1      | data input port                             |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |         yumi_i        |      1      | data input port                             |
  +---------+-----------------------+-------------+---------------------------------------------+  
  |         |        ready_o        |      1      | data output port                            |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |       opA_sel_o       |      1      | data output port                            |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |        opA_ld_o       |      1      | data output port                            |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |       opA_inv_o       |      1      | data output port                            |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |       opA_clr_l_o     |      1      | data output port                            |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |       opB_sel_o       |      3      | data output port                            |
  +         +-----------------------+-------------+---------------------------------------------+
  | OUTPUT  |       opB_ld_o        |      1      | data output port                            |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |       opB_inv_o       |      1      | data output port                            |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |       opB_clr_l_o     |      1      | data output port                            |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |       opC_sel_o       |      3      | data output port                            |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |       opC_ld_o        |      1      | data output port                            |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |    latch_inputs_o     |      1      | data output port                            |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |     adder_cin_o       |      1      | data output port                            |
  +         +-----------------------+-------------+---------------------------------------------+
  |         |         v_o           |      1      | data output port                            |
  +---------+-----------------------+-------------+---------------------------------------------+  

* Parameter
  
  +--------------------------+--------------------------------------+---------------------------------------+
  |          Name            |           DESCRIPTION                |                DEFAULT                |
  +--------------------------+--------------------------------------+---------------------------------------+ 
  |        width_p           |      Internal signal  width          |                  32                   |    
  +--------------------------+--------------------------------------+---------------------------------------+
  
- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_idiv_iterative_controller.jpg
   
************
bsg_id_pool
************

* Overview

  This module is an N-bit integer iterative divider, capable of signed & unsigned division.

- Port
  
  +---------+---------------+-------------+---------------------------------------------+
  |  Type   |      NAME     |    WIDTH    |    DESCRIPTION                              |
  +---------+---------------+-------------+---------------------------------------------+
  |  CLOCK  |      clk_i    |      1      | clock input port                            |
  +---------+---------------+-------------+---------------------------------------------+
  |  RESET  |     reset_i   |      1      | reset input port                            |
  +---------+---------------+-------------+---------------------------------------------+
  |         |  alloc_yumi_i |      1      | data input port                             |
  +         +---------------+-------------+---------------------------------------------+
  |	 INPUT  |   dealloc_v_i |      1      | data input port                             |
  +	        +---------------+-------------+---------------------------------------------+
  |	        |  dealloc_id_i | id_width_lp | data input port                             |
  +---------+---------------+-------------+---------------------------------------------+  
  |         |  alloc_id_o   | id_width_lp | data output port                            |
  + OUTPUT  +---------------+-------------+---------------------------------------------+
  |         |   alloc_v_o   |      1      | data output port                            |
  +---------+---------------+-------------+---------------------------------------------+ 

* Parameter
  
  +--------------------------+--------------------------------------+---------------------------------------+
  |          Name            |          DESCRIPTION                 |                DEFAULT                |
  +--------------------------+--------------------------------------+---------------------------------------+ 
  |       id_width_lp        |    input and output data width       |         `BSG_SAFE_CLOG2(els_p)        |    
  +--------------------------+--------------------------------------+---------------------------------------+
  |         els_p            |    internal signal width             |                 "inv"                 |
  +--------------------------+--------------------------------------+---------------------------------------+
  
- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_id_pool.jpg

*******************
bsg_imul_iterative
*******************

* Overview

  This is an 32bit integer iterative multiplier, capable of signed & unsigned multiplication.

- Port
  
  +---------+------------------+-------------+---------------------------------------------+
  |  Type   |        NAME      |    WIDTH    |    DESCRIPTION                              |
  +---------+------------------+-------------+---------------------------------------------+
  |  CLOCK  |        clk_i     |      1      | clock input port                            |
  +---------+------------------+-------------+---------------------------------------------+
  |  RESET  |       reset_i    |      1      | reset input port                            |
  +---------+------------------+-------------+---------------------------------------------+
  |         |         v_i      |      1      | data input port                             |
  +         +------------------+-------------+---------------------------------------------+
  |	        |        opA_i     |   width_p   | data input port                             |
  +	        +------------------+-------------+---------------------------------------------+
  |	 INPUT  |        opB_i     |   width_p   | data input port                             |
  +         +------------------+-------------+---------------------------------------------+
  |         |    signed_opA_i  |      1      | data input port                             |
  +         +------------------+-------------+---------------------------------------------+
  |         |    signed_opB_i  |      1      | data input port                             |
  +         +------------------+-------------+---------------------------------------------+
  |         | gets_high_part_i |      1      | data input port                             |
  +         +------------------+-------------+---------------------------------------------+
  |         |   signed_opB_i   |      1      | data input port                             |
  +---------+------------------+-------------+---------------------------------------------+  
  |         |      ready_o     |      1      | data output port                            |
  +         +------------------+-------------+---------------------------------------------+
  | OUTPUT  |       v_o        |      1      | data output port                            |
  +         +------------------+-------------+---------------------------------------------+
  |         |     result_o     |   width_p   | data output port                            |
  +---------+------------------+-------------+---------------------------------------------+

* Parameter
  
  +--------------------------+--------------------------------------+---------------------------------------+
  |          Name            |           DESCRIPTION                |                DEFAULT                |
  +--------------------------+--------------------------------------+---------------------------------------+ 
  |        width_p           |     input and output data width      |                  32                   |    
  +--------------------------+--------------------------------------+---------------------------------------+
  
- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_imul_iterative.jpg

*********
bsg_inv
*********

* Overview

  This is an inverter.

- Port
  
  +---------+---------+-------------+---------------------------------------------+
  |  Type   |   NAME  |    WIDTH    |    DESCRIPTION                              |
  +---------+---------+-------------+---------------------------------------------+
  |  INPUT  |    i    |   width_p   | data input port                             |
  +---------+---------+-------------+---------------------------------------------+
  | OUTPUT  |    o    |   width_p   | data output port                            |
  +---------+---------+-------------+---------------------------------------------+

* Parameter
  
  +--------------------------+--------------------------------------+---------------------------------------+
  |            Name          |     DESCRIPTION                      |                DEFAULT                |
  +--------------------------+--------------------------------------+---------------------------------------+ 
  |          width_p         | input and output data width          |                 "inv"                 |    
  +--------------------------+--------------------------------------+---------------------------------------+

- Assertion
  
  None
  
* Details & Circuit structure

   .. image :: image/bsg_inv.jpg
 

   